name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      
      # Add step to create .env.test file with CI configuration
      - name: Create test environment file
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" > .env.test
          echo "JEST_TIMEOUT=120000" >> .env.test
      
      # Add step to run database migrations before tests
      - name: Run database migrations
        run: npm run db:migrate:test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          
      # Run tests with increased timeouts and sequential execution (--runInBand)
      - name: Run tests with coverage
        run: npm run test:coverage -- --runInBand --testTimeout=60000 --detectOpenHandles
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          # Add more time for tests in CI environment
          JEST_TIMEOUT: 120000
          # Increase database operation delays in CI
          CI_ENVIRONMENT: true
          
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
